name: Start release

# There are a lot of builds for different languages that all need to agree on what the version is. To start a release, somebody
# pushes a tag starting with "release-". This workflow will then:
# - Edit all the files that need to know the name of the release.
# - Commit those files.
# - Make a new tag for the release. (The tag name will take the current tag and strip the "release-" from the start.)
# - Edit the files again to advance Java-related versions to *-SNAPSHOT.
# - Commit those files again.
# - Push the new tag.
# - Delete the current tag.
# - Create a release on GitHub. That triggers another workflow to build the release and upload its artifacts.

on:
  push:
    tags:
    - release-*

jobs:
  kickoff:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Configure git
      run: |
        git config --local user.email ops@ironcorelabs.com
        git config --local user.name "Leeroy Travis"
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set tag
      id: tag
      run: |
        CURRENT=$(basename ${{ github.ref }})
        NAME=$(echo ${CURRENT} | sed 's/release-//')
        NUMBER=$(echo ${NAME} | sed 's/[^0-9.]//')
        NEXT=$(echo ${NUMBER} | awk -F. -v OFS=. '{$NF++;print}')
        echo "::set-output name=current::${CURRENT}"
        echo "::set-output name=tag::${NAME}"
        echo "::set-output name=dewey::${NUMBER}"
        echo "::set-output name=next::${NEXT}"
    - name: Edit files for release
      run: .github/set-versions.sh ${{ steps.tag.outputs.dewey }}
    - uses: actions-rs/cargo@v1
      name: Update Cargo.lock
      with:
        command: update
        args: -p ironoxide-android -p ironoxide-cpp -p ironoxide-java
    - run: git add Cargo.lock
    - run: git commit -m "Setting version to ${{ steps.tag.outputs.tag }}"
    - run: git tag -a -m "Releasing ${{ steps.tag.outputs.tag }}" ${{ steps.tag.outputs.tag }}
    - name: Edit files for next snapshot
      run: .github/set-versions.sh -j ${{ steps.tag.outputs.next }}-SNAPSHOT
    - run: git commit -m "Setting java version to ${{ steps.tag.outputs.next }}"
    - name: Push git changes
      run: |
        git push origin ${{ steps.tag.outputs.tag }}
        git push
        git push origin ${{ steps.tag.outputs.current }} --delete
    - uses: actions/create-release@v1
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Version ${{ github.ref }}
