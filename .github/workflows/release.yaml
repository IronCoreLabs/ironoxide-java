name: release

on:
  push:
    tags:
    - '*'

jobs:
  release:
    runs-on: ubuntu-18.04
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/create-release@v1
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Version ${{ github.ref }}

    - name: Download release artifacts from ubuntu-18.04
      uses: actions/download-artifact@v1
      with:
        name: release-ubuntu-18.04
        path: release/ubuntu-18.04
    - name: Sign artifact for ubuntu-18.04
      run: |
        gpg --detach-sign -a release/ubuntu-18.04/libironoxide_java.so
        gpg --verify release/ubuntu-18.04/libironoxide_java.so.asc
    - name: Upload lib for ubuntu-18.04
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/ubuntu-18.04/libironoxide_java.so
    - name: Upload signature for ubuntu-18.04
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/ubuntu-18.04/libironoxide_java.so.asc
        asset_content_type: application/pgp-signature

    - name: Download release artifacts from macos-10.15
      uses: actions/download-artifact@v1
      with:
        name: release-macos-10.15
        path: release/macos-10.15
    - name: Sign artifact for macos-10.15
      run: |
        gpg --detach-sign -a release/macos-10.15/libironoxide_java.dylib
        gpg --verify release/macos-10.15/libironoxide_java.dylib.asc
    - name: Upload lib for macos-10.15
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/macos-10.15/libironoxide_java.dylib
    - name: Upload signature for macos-10.15
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/macos-10.15/libironoxide_java.dylib.asc
        asset_content_type: application/pgp-signature

    - name: Download release artifacts from centos7
      uses: actions/download-artifact@v1
      with:
        name: release-centos7
        path: release/centos7
    - name: Sign artifact for centos7
      run: |
        gpg --detach-sign -a release/centos7/libironoxide_java-centos7.tar.gz
        gpg --verify release/centos7/libironoxide_java-centos7.tar.gz.asc
    - name: Upload lib for centos7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/centos7/libironoxide_java-centos7.tar.gz
    - name: Upload signature for centos7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/centos7/libironoxide_java-centos7.tar.gz.asc
        asset_content_type: application/pgp-signature

    - name: Download release artifacts from centos8
      uses: actions/download-artifact@v1
      with:
        name: release-centos8
        path: release/centos8
    - name: Sign artifact for centos8
      run: |
        gpg --detach-sign -a release/centos8/libironoxide_java-centos8.tar.gz
        gpg --verify release/centos8/libironoxide_java-centos8.tar.gz.asc
    - name: Upload lib for centos8
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/centos8/libironoxide_java-centos8.tar.gz
    - name: Upload signature for centos8
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: release/centos8/libironoxide_java-centos8.tar.gz.asc
        asset_content_type: application/pgp-signature

  build:
    strategy:
      matrix:
        target: [ ubuntu-18.04, macos-10.15, centos7, centos8 ]
        include:
        - target: ubuntu-18.04
          host: ubuntu-18.04
        - target: macos-10.15
          host: macos-10.15
        - target: centos7
          host: ubuntu-latest
          image: centos7
        - target: centos8
          host: ubuntu-latest
          image: centos8
    runs-on: ${{ matrix.host }}
    container: ${{ matrix.image }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Install sbt
      # The setup-java action should do this, but it doesn't on MacOS.
      # https://github.com/actions/setup-java/issues/50
      if: ${{ matrix.target != 'ubuntu-18.04' }}
      run: |
        curl -Ls https://git.io/sbt > sbt
        chmod +x sbt
        mv sbt /usr/local/bin/sbt || sudo mv sbt /usr/local/bin/sbt
    - name: Set up centos
      if: matrix.image != ''
      run: |
        # Note that yum will fail if these are run in an order that makes more sense.
        yum install -y openssl-devel
        yum install -y clang
        yum group install -y "Development Tools"
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Copy release artifacts
      run: |
        # Copy out just the library to upload. In order to just grab the .dylib or .so we just use extglob, allowing use of |.
        # We did this instead of 2 cp lines so we could leave -e enabled and it would succeed as long as it matches at least once.
        mkdir release_artifacts
        shopt -s extglob
        cp target/release/libironoxide_java.*(so|dylib) release_artifacts/
    - name: Package libs for centos
      if: matrix.image != ""
      working-directory: release_artifacts
      run: |
        tar czf "libironoxide_java-${{ matrix.image }}.tar.gz" libironoxide_java.so
        rm libironoxide_java.so
    - name: Upload release info
      uses: actions/upload-artifact@v1
      with:
        name: release-${{ matrix.target }}
        path: release_artifacts
